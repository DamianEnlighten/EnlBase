/* modified version of:
 *  normalize.css: http://necolas.github.com/normalize.css/
 *  reset.css: http://meyerweb.com/eric/tools/css/reset/ 
*/
/* HTML5 display definitions */
article, aside, details, figcaption, figure, footer, header, hgroup, nav, section, summary {
  display: block;
}

audio, canvas, video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}

/* Base Reset */
html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

/* used for mobile standard font sizing */
html, button, input, select, textarea {
  font-family: sans-serif;
}

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, cite, code, img, figure, sub, sup,
dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-weight: inherit;
  font-style: inherit;
  font-size: 100%;
  font-family: inherit;
  vertical-align: baseline;
}

a:focus {
  outline: thin dotted;
}

a:hover, a:active {
  outline: 0;
}

h1, h2, h3, h4, h5, h6 {
  font-size: 1em;
}

ul, ol {
  list-style: none;
  list-style-image: none;
}

img {
  border: 0;
  -ms-interpolation-mode: bicubic;
}

svg:not(:root) {
  overflow: hidden;
}

button, input[type="button"], input[type="reset"], input[type="submit"] {
  cursor: pointer;
  -webkit-appearance: button;
  *overflow: visible;
}

button[disabled], input[disabled] {
  cursor: default;
}

input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
  *height: 13px;
  *width: 13px;
}

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-decoration, input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none;
}

textarea {
  overflow: auto;
  vertical-align: top;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

caption, th, td {
  text-align: left;
  font-weight: normal;
}

caption, th, td {
  text-align: left;
  font-weight: normal;
}

/* Basic Colors/Typography */
body {
  background: #fff;
  color: #000;
  font: 12px/14px arial, sans-serif;
}

/* Normalize Styles */
abbr[title] {
  border-bottom: 1px dotted;
}

b, strong {
  font-weight: bold;
}

mark {
  background: #ff0;
  color: #000;
}

pre, code {
  font-family: monospace, serif;
  font-size: 1em;
}

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Clearfix */
.clearfix:before, .clearfix:after {
  content: " ";
  display: table;
}

.clearfix:after {
  clear: both;
}

.clearfix {
  *zoom: 1;
}

/* for IE 6/7 */
/* Image Replacement */
.ir {
  display: block;
  text-indent: 100%;
  overflow: hidden;
  white-space: nowrap;
  border: 0;
  background-color: transparent;
  background-repeat: no-repeat;
  text-align: left;
  direction: ltr;
  *line-height: 0;
}

.ir br {
  display: none;
}

.home {
  height: 100%;
  margin: 10px;
}

.home .map-container {
  width: 99%;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  overflow: hidden;
}

.home .map-canvas-container {
  height: 50em;
}

.home .content {
  background: #4CAF50 no-repeat;
  padding: 5px;
  height: 50em;
}

.home h2 {
  color: #f1f1f1;
}

.about li {
  color: #f1f1f1;
  list-style: square;
  margin-left: 1em;
}

.contact li {
  color: #f1f1f1;
  font-size: 1.25em;
  padding: .25em 0;
}

.contact li a {
  color: #f1f1f1;
}

.contact li i {
  font-size: 1.5em;
  padding-right: .5em;
}

.portfolio img {
  height: 100%;
  width: 100%;
}

.header {
  background: #4CAF50 no-repeat;
  height: 5em;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row;
  -ms-flex-flow: row;
  flex-flow: row;
  padding: 0 1em;
}

.header nav {
  padding-top: 1em;
}

.header li {
  display: inline-block;
  border-right: 1px solid #333;
  text-align: center;
}

.header li a {
  color: #FFF;
}

.header li.last {
  border-right: none;
}

.header a {
  color: #FFF;
}

.header .noMP {
  margin: 0;
  padding: 0;
}

.header .logo-icon {
  font-size: 4em;
}

.header .logo-text {
  font-size: 1.25em;
  line-height: 1em;
  padding-top: 0.3em;
}

.side-nav {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column;
  -ms-flex-flow: column;
  flex-flow: column;
  background: #66BB6A no-repeat;
  height: 52em;
}

.side-nav ul {
  margin-top: 1em;
}

.side-nav li {
  border-bottom: 1px solid #333;
  margin: 0 1em;
}

.side-nav h3 {
  margin-left: 1.9em;
  font-size: 1.2em;
  color: #fff;
}

.full-width {
  max-width: 1400px;
}

.footer {
  background: #4CAF50;
  padding: 2rem 4rem;
  text-align: center;
  color: #fff;
  position: relative;
  bottom: 0;
}

.footer i {
  font-size: 50px;
}

.footer h4 {
  color: #fff;
  font-size: 1em;
  font-weight: 400;
  text-transform: uppercase;
  margin-top: .5rem;
  margin-bottom: 10px;
}

.footer p, .footer a {
  font-weight: 300;
  font-size: 1.25em;
}

@media only screen and (min-width: 40.063em) {
  .footer .columns:nth-child(n+2) {
    border-left: 1px solid #b3b3b3;
    min-height: 18em;
  }
}

.footer-links {
  list-style-type: none;
}

.footer-links li {
  margin-top: .5em;
}

html, body {
  height: 100%;
  width: 100%;
  font-size: 16px;
  font-family: Arial, Helvetica, sans-serif;
}

body {
  background: #E8F5E9;
  background-size: cover;
  color: #f1f1f1;
  min-height: 72em;
}

li a {
  color: #1B5E20;
}

h1 {
  font-size: 1.75em;
}

h2 {
  font-size: 1.5em;
}

h3 {
  font-size: 1.25em;
}

.panel {
  margin-top: 10px;
  background: #1B5E20;
  padding: 1em;
}

.panel p, .panel ul {
  color: #f1f1f1;
  padding: 1em 0;
}

.panel h1, .panel h2, .panel h3 {
  color: #f1f1f1;
  font-weight: bold;
  padding: 0 1em 0 0;
}

.panel h1 {
  font-size: 2em;
}

.panel h2 {
  font-size: 1.5em;
}

.panel h3 {
  font-size: 1.25em;
}

.active {
  background: rgba(0, 0, 0, 0.25);
}

/*# sourceMappingURL=data:application/json;base64, */